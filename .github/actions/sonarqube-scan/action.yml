name: 'SonarQube Scan'
description: >
  This action performs a SonarQube scan on your project using the SonarQube Scan Action.
  It requires a SonarQube server URL, token, organization, project key, and project name.
  Optionally, you can specify source directories, test directories, binaries directory, and source encoding.
  Creates the file `sonar-project.properties` in the root of the repository with the necessary configuration.

inputs:
  sonar-host-url:
    description: 'SonarQube URL'
    required: true
    type: string
  sonar-token:  
    description: 'SonarQube Token'
    required: true
    type: string
  sonar-organization:
    description: 'SonarQube Organization'
    required: true
    type: string
  sonar-project-key:
    description: 'SonarQube Project Key'
    required: true
    type: string
  sonar-project-name:
    description: 'SonarQube Project Name'
    required: true
    type: string
  sonar-sources:
    description: 'SonarQube Source Directory'
    required: false
    default: 'src/main/java'
    type: string
  sonar-tests:  
    description: 'SonarQube Test Directory'
    required: false
    default: 'src/test/java'
  sonar-binaries:
    description: 'SonarQube Binaries Directory'
    required: false
    default: 'target/'
  sonar-sourceEncoding:
    description: 'SonarQube Source Encoding'
    required: false
    default: 'UTF-8'

runs:
  using: composite
  steps:
    - name: Create sonar-project.properties
      shell: bash
      run: |
        echo "sonar.projectKey=${{ inputs.sonar-project-key }}" > sonar-project.properties
        echo "sonar.projectName=${{ inputs.sonar-project-name }}" >> sonar-project.properties
        echo "sonar.organization=${{ inputs.sonar-organization }}" >> sonar-project.properties
        echo "sonar.sources=${{ inputs.sonar-sources }}" >> sonar-project.properties 
        echo "sonar.tests=${{ inputs.sonar-tests }}" >> sonar-project.properties     
        echo "sonar.java.binaries=${{ inputs.sonar-binaries }}" >> sonar-project.properties
        echo "sonar.sourceEncoding=${{ inputs.sonar-sourceEncoding }}" >> sonar-project.properties

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}
        SONAR_ORGANIZATION: ${{ inputs.sonar-organization }} 