name: Regular Java Library Workflow
description: > 
  This is the initial workflow for a regular Java library, which includes building, testing, and scanning the code.
  It also integrates with JFrog for artifact management and SonarQube for code quality analysis.

on: 
  workflow_call:
    inputs:
      jf-url:
        description: 'JFrog URL'
        required: true
        type: string
      jf-repo-resolve-releases:
        description: 'Repository for resolving releases'
        required: false
        default: 'maven'
        type: string
      jf-repo-resolve-snapshots:
        description: 'Repository for resolving snapshots'
        required: false
        default: 'maven'
        type: string
      java-distribution:
        description: 'Java distribution to use (e.g., temurin)'
        required: false
        default: 'temurin'
        type: string
      java-version: 
        description: 'Java version to use (e.g., 17)'
        required: false
        default: '17'
        type: string
      sonar-project-key:
        description: 'SonarQube Project Key'
        required: true
        type: string
      sonar-project-name: 
        description: 'SonarQube Project Name'
        required: true
        type: string
    secrets:
      jf-access-token:
        description: 'JFrog Access Token'
        required: true
      sonar-token:
        description: 'SonarQube Token'
        required: true 
      sonar-host-url:
        description: 'SonarQube URL'
        required: true
      sonar-organization:
        description: 'SonarQube Organization'
        required: true 
      semantic-release-bot-token:
        description: 'GitHub Token for Semantic Release Bot'
        required: true

jobs:
  main-job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.semantic-release-bot-token }}

      - name: Setup JDK
        uses: diego4bits/reusable-workflow-components/.github/actions/setup-jdk@main
        with:
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Setup JFrog CLI - Auth Token
        uses: diego4bits/reusable-workflow-components/.github/actions/setup-and-config-jfrog@main
        with:
          jf-url: ${{ inputs.jf-url }}
          jf-access-token: ${{ secrets.jf-access-token }}
          jf-repo-resolve-releases: ${{ inputs.jf-repo-resolve-releases }}
          jf-repo-resolve-snapshots: ${{ inputs.jf-repo-resolve-snapshots }}

      - name: Build & Test Using Maven & JFrog
        id: build-and-test-mvn
        uses: diego4bits/reusable-workflow-components/.github/actions/build-and-test-mvn@main

      - name: Dependecy Check Scan
        uses: diego4bits/reusable-workflow-components/.github/actions/dependency-check@main
        with:
          scan-args: |
            --disableRetireJS
            --scan "**/*.java"
            --format HTML

      - name: SonarQube Scan
        uses: diego4bits/reusable-workflow-components/.github/actions/sonarqube-scan@main
        with:
          sonar-project-key: ${{ inputs.sonar-project-key }}
          sonar-project-name: ${{ inputs.sonar-project-name }}
          sonar-organization: ${{ secrets.sonar-organization }}
          sonar-host-url: ${{ secrets.sonar-host-url }}
          sonar-token: ${{ secrets.sonar-token }}

      - name: Extract repository name
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV

      - name: Semantic Release Custom Action
        uses: diego4bits/semantic-release-action@main
        env:
          REPO_NAME: ${{ env.REPO_NAME }}
        with:
          release_branch: develop
          github_token: ${{ secrets.semantic-release-bot-token }}
